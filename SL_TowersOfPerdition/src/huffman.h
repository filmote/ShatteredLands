/*************************************************************************
 * Shattered Lands: Towers of Perdition                                  *
 * C opyright (C) 2019  Justin (tuxinator2009) Davis                     *
 *                                                                       *
 * This program is free software: you can redistribute it and/or modify  *
 * it under the terms of the GNU General Public License as published by  *
 * the Free Software Foundation, either version 3 of the License, or     *
 * (at your option) any later version.                                   *
 *                                                                       *
 * This program is distributed in the hope that it will be useful,       *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 * GNU General Public License for more details.                          *
 *                                                                       *
 * You should have received a copy of the GNU General Public License     *
 * along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 *************************************************************************/

#ifndef HUFFMAN_H
#define HUFFMAN_H

#define HUFFMAN static const uint8_t PROGMEM

HUFFMAN huffmanNodes[] = //112 bytes
{
	0x82,0x84,0x84,0x86,0x9F,0xA1,0x84,0x86,0x93,0x95,0x84,0x86,0x87,0x88,0x83,0x84,
	0x0E,0x03,0x15,0x13,0x82,0x84,0x83,0x84,0x09,0x0B,0x16,0x83,0x84,0x05,0x12,0x82,
	0x83,0x0C,0x3F,0x84,0x85,0x9C,0x9E,0x00,0x82,0x84,0x83,0x85,0x0F,0x84,0x85,0x90,
	0x91,0x17,0x82,0x84,0x83,0x85,0x02,0x84,0x85,0x84,0x85,0x1E,0x18,0x1C,0x28,0x2A,
	0x07,0x84,0x85,0x8A,0x8B,0x01,0x82,0x84,0x83,0x84,0x08,0x0D,0x06,0x14,0x82,0x83,
	0x04,0x82,0x83,0x19,0x82,0x84,0x83,0x85,0x10,0x84,0x85,0x8A,0x8C,0x1D,0x82,0x83,
	0x20,0x82,0x83,0x1A,0x2B,0x83,0x85,0x1B,0x84,0x85,0x84,0x85,0x2C,0x29,0x11,0x0A
};

HUFFMAN messageTitleOptions[] = //13 bytes
{
	0x15,0x17,0x44,0x80,0xB1,0xE3,0x88,0x5C,0x81,0xFE,0xAB,0xCF,0x00
};

HUFFMAN messageNoSaveData[] = //11 bytes
{
	0x12,0x1B,0x85,0x86,0xB9,0xEC,0xEC,0x9A,0xD8,0x47,0xC0
};

HUFFMAN messageNoItems[] = //12 bytes
{
	0x13,0xFA,0xC3,0x3D,0x63,0x4B,0xE9,0xBC,0x35,0xCC,0x1F,0xAA
};

HUFFMAN messageUpload[] = //75 bytes
{
	0x84,0x05,0x88,0xB0,0x74,0xFA,0xC2,0x93,0x13,0xC1,0xA7,0x7F,0x2F,0xAE,0x76,0xDC,
	0xFE,0x0A,0xA1,0x8D,0xFF,0x5F,0xF4,0x64,0x47,0x1A,0xE7,0x6D,0xCF,0x5D,0x02,0xB3,
	0x1F,0xD5,0x2C,0x9A,0x98,0x3A,0x7D,0x61,0x49,0x5E,0x68,0xE6,0x0F,0x96,0x1F,0xEA,
	0xBC,0xF5,0x52,0x8D,0xB1,0x81,0xFE,0xAB,0xCF,0x2C,0xE5,0x11,0xE7,0xBE,0xFD,0x31,
	0x1A,0x9E,0x13,0x5F,0x6D,0xCF,0x5D,0x03,0x0C,0x7F,0x54
};

HUFFMAN messagePrologue0[] = //45 bytes
{
	0x51,0x55,0x8D,0x73,0x2B,0xB9,0xDB,0x72,0x8B,0x45,0x79,0x7A,0xE0,0x1F,0xA6,0x4A,
	0xD1,0xE7,0x4A,0x79,0xDC,0xA6,0xBA,0x6F,0xA8,0x6C,0x67,0x6D,0xC3,0x71,0x0F,0x61,
	0x25,0xEB,0x80,0xE3,0xD8,0x94,0xC1,0xF4,0x47,0x59,0xEC,0x4A,0xA0
};

HUFFMAN messagePrologue1[] = //53 bytes
{
	0x61,0xED,0xB9,0x4F,0x3B,0x94,0xE2,0x65,0x6F,0xD3,0x5B,0x45,0xE9,0x83,0xF4,0x03,
	0x1E,0x0A,0x1D,0x94,0xC1,0xF2,0xC8,0x3A,0xEA,0xD1,0xFA,0x69,0x83,0xF4,0x55,0x91,
	0x32,0x5E,0x0F,0xA7,0x6D,0x1E,0x73,0x17,0xE9,0xD6,0xBF,0x32,0xE4,0xBF,0xA7,0x6D,
	0xCA,0x2D,0x15,0xEA,0x80
};

HUFFMAN messagePrologue2[] = //40 bytes
{
	0x48,0xB0,0xF4,0xBD,0x67,0x6D,0xCF,0x62,0x18,0x2C,0x89,0x79,0x2B,0x47,0x9D,0x19,
	0xA7,0x54,0xC4,0xB2,0x6B,0xEB,0x9F,0xEE,0x86,0x91,0x89,0x2B,0x0D,0x38,0xD6,0xBC,
	0x52,0xA5,0x37,0xAD,0xA3,0x87,0xEA,0x80
};

HUFFMAN messagePrologue3[] = //49 bytes
{
	0x5B,0x2B,0xB1,0x99,0x08,0xE3,0x5A,0x9C,0xA3,0x11,0x0F,0x68,0xB7,0xA3,0x4A,0xDF,
	0xA6,0x0F,0xA1,0xB7,0x43,0xF4,0xEB,0x5F,0x9E,0xAF,0x3A,0x76,0xDC,0x66,0x9D,0x53,
	0xB7,0x9C,0xB2,0xC0,0xD7,0xBE,0x9D,0x73,0xCC,0xBA,0xD3,0xE9,0xDB,0x6B,0x56,0x0F,
	0xAA
};

HUFFMAN messageEpilogue0[] = //38 bytes
{
	0x45,0xB0,0xA4,0xDB,0x4B,0x9B,0xC2,0x9E,0x7A,0xBC,0xE7,0xE5,0xF6,0xDC,0xF6,0x21,
	0x82,0xC8,0xA7,0x6F,0x39,0x7B,0x6A,0xF4,0xF5,0xE8,0x71,0x3D,0x8C,0xB3,0x5A,0x2F,
	0xB6,0x72,0x8A,0xC1,0xF5,0x40
};

HUFFMAN messageEpilogue1[] = //50 bytes
{
	0x5B,0xDD,0xD0,0xCD,0x69,0x3B,0x6E,0x7B,0x10,0xC1,0x64,0x4B,0x64,0x0C,0xFE,0xFD,
	0x3B,0x69,0x61,0xAF,0x73,0xB6,0xD7,0xFE,0xD3,0xB1,0x53,0xAE,0x60,0xDF,0x6D,0xA2,
	0xE8,0xB4,0x57,0xA7,0x5C,0xB1,0x03,0x99,0x5E,0x1C,0x57,0x42,0x3C,0x32,0x6F,0x0D,
	0xB0,0x54
};

HUFFMAN messageEpilogue2[] = //61 bytes
{
	0x6E,0xFA,0xC3,0x34,0x09,0x74,0xFD,0x76,0x14,0x17,0xF2,0xFB,0x69,0x61,0xAF,0x73,
	0xB6,0xE7,0xFB,0x4E,0xC5,0x2F,0x07,0xD0,0x16,0x3C,0x71,0x0B,0x9D,0x73,0x56,0x3E,
	0x5D,0xEB,0xAC,0xED,0xB9,0xEC,0x43,0x05,0x91,0x4E,0xDE,0x72,0xFB,0x68,0xF3,0x98,
	0x94,0xEB,0x9E,0x65,0xC9,0x7F,0x2F,0xB6,0xE5,0x16,0x8A,0xF5,0x40
};

HUFFMAN messageEpilogue3[] = //64 bytes
{
	0x74,0xED,0xB4,0x74,0xB2,0x83,0x72,0xBB,0x38,0xD7,0x29,0xE0,0x0C,0x5A,0xFF,0xA3,
	0x22,0x94,0xC3,0xDD,0x63,0x3A,0xE1,0x61,0xAD,0x7D,0xB6,0x31,0x57,0x9E,0x9D,0xB7,
	0x2B,0xCD,0x1A,0xCB,0x79,0xDC,0xD1,0xFA,0x2B,0x07,0xC5,0x3F,0x0B,0xC1,0xF4,0x05,
	0x8F,0x1C,0x42,0xE7,0x5C,0xD4,0xF5,0xEF,0x97,0xDB,0x73,0xD8,0x86,0x0B,0x22,0xA8
};

HUFFMAN messageBattleEscape[] = //8 bytes
{
	0x0B,0x88,0x11,0x29,0x94,0x67,0xD5,0x00
};

HUFFMAN messageBattleNoEscape[] = //23 bytes
{
	0x26,0xFA,0xC3,0x01,0x83,0x4B,0xE8,0x81,0x19,0x94,0x67,0xCB,0xD5,0x2F,0x49,0x92,
	0x9D,0x91,0x4A,0x79,0xDC,0xA7,0x50
};

HUFFMAN messageBattleNoSpells[] = //13 bytes
{
	0x13,0xFA,0xC3,0x3D,0x63,0x4B,0xE8,0x60,0xDD,0x13,0x07,0xEA,0x80
};

HUFFMAN messageBattleChooseFightRun[] = //7 bytes
{
	0x09,0xD4,0xF5,0xEF,0xA2,0x04,0x40
};

HUFFMAN messageBattleChooseAction[] = //22 bytes
{
	0x26,0xCE,0xEC,0x01,0x90,0xFC,0xF4,0x93,0x5B,0x00,0x49,0x7E,0x7A,0xB1,0xF4,0xD3,
	0x2B,0x38,0x23,0x20,0x67,0xF6
};

HUFFMAN messageBattleSelectCharacter[] = //10 bytes
{
	0x10,0x26,0xA6,0x0E,0x58,0x37,0x89,0x80,0xE6,0x80
};

HUFFMAN messageBattleSelectMonster[] = //9 bytes
{
	0x0E,0x26,0xA6,0x0E,0x5E,0x96,0x25,0xCD,0x00
};

HUFFMAN messageBattlePartyDefeated[] = //9 bytes
{
	0x0E,0xFF,0x89,0xDF,0x4F,0x3D,0x5E,0x73,0xF0
};

HUFFMAN messageBattleDefends[] = //15 bytes
{
	0x19,0xF3,0xD5,0x8F,0x89,0x7B,0xC5,0x6B,0x3D,0x9A,0x65,0x6E,0x76,0x18,0xC4
};

HUFFMAN messageBattleFocuses[] = //19 bytes
{
	0x1D,0xD6,0xC0,0x12,0x64,0xBC,0x52,0xA1,0x76,0x71,0x44,0xC3,0x93,0xF4,0xA5,0x55,
	0xF9,0x52,0x40
};

HUFFMAN messageBattleNotEnoughMana[] = //9 bytes
{
	0x0F,0x1B,0xE8,0xC6,0xC3,0x5E,0xE6,0x98,0x38
};

HUFFMAN messageMainMenu[] = //13 bytes
{
	0x14,0x3F,0x3D,0x21,0x76,0x71,0x42,0xC3,0x5C,0xFD,0x41,0x3F,0x00
};

HUFFMAN messageGameSaved[] = //7 bytes
{
	0x0A,0xAF,0x34,0x70,0xB0,0xD7,0xE0
};

HUFFMAN messageSelectAnItem[] = //8 bytes
{
	0x0E,0x26,0xA6,0x0E,0x98,0x30,0xFC,0xF4
};

HUFFMAN messageItemDescription0[] = //10 bytes
{
	0x0D,0x46,0x0B,0x35,0xA4,0xA4,0x7E,0xE6,0xFF,0x80
};

HUFFMAN messageItemDescription1[] = //11 bytes
{
	0x0E,0x46,0x0B,0x35,0xA4,0xA5,0x7E,0x3F,0x73,0x7F,0xC0
};

HUFFMAN messageItemDescription2[] = //11 bytes
{
	0x0E,0x46,0x0B,0x35,0xA4,0xFC,0x7E,0x5F,0xB9,0xBF,0xE0
};

HUFFMAN messageItemDescription3[] = //9 bytes
{
	0x0C,0x46,0x0B,0x35,0xA4,0xA4,0x4D,0x3F,0x80
};

HUFFMAN messageItemDescription4[] = //10 bytes
{
	0x0D,0x46,0x0B,0x35,0xA4,0xA5,0x7E,0xE6,0x9F,0xC0
};

HUFFMAN messageItemDescription5[] = //10 bytes
{
	0x0D,0x46,0x0B,0x35,0xA4,0xA4,0x7E,0xE6,0x9F,0xC0
};

HUFFMAN messageItemDescription6[] = //15 bytes
{
	0x15,0x46,0x0B,0x35,0xA4,0xA5,0x7E,0x8F,0xC4,0xDF,0xF9,0x83,0xE9,0xA7,0xF0
};

HUFFMAN messageItemDescription7[] = //13 bytes
{
	0x15,0x46,0x0B,0x35,0xA4,0xC5,0x2A,0x6F,0xFC,0xC1,0xF4,0xD3,0xF8
};

HUFFMAN messageInn1[] = //7 bytes
{
	0x0C,0xED,0xB8,0x0B,0x2E,0x87,0x28
};

HUFFMAN messageInn2[] = //10 bytes
{
	0x10,0x2E,0xCF,0xA6,0x74,0xED,0xB8,0x71,0x1F,0xCE
};

HUFFMAN messageInsufficientFunds[] = //13 bytes
{
	0x13,0x38,0x90,0x75,0xD4,0xE0,0x3B,0x1E,0x9A,0x84,0x7C,0x55,0x00
};

HUFFMAN messageGameOver[] = //7 bytes
{
	0x09,0xAF,0x34,0x6B,0xB3,0x5A,0x00
};

HUFFMAN messageStats[] = //10 bytes
{
	0x0F,0xCE,0x32,0x79,0xEB,0x32,0xB5,0x4D,0x32,0xB0
};

HUFFMAN messageItemsFull[] = //11 bytes
{
	0x11,0xFA,0xC3,0x31,0x1C,0xD3,0x29,0x2F,0xD2,0xC3,0xC0
};

HUFFMAN messageChestEmpty[] = //9 bytes
{
	0x0E,0x06,0xD9,0x74,0x39,0x47,0xA7,0xFE,0xF8
};

HUFFMAN messageItemFound[] = //5 bytes
{
	0x06,0xD6,0xC2,0x3E,0x80
};

HUFFMAN messageSpellLearned[] = //5 bytes
{
	0x08,0x53,0xC4,0x17,0xE8
};

HUFFMAN messageSword[] = //4 bytes
{
	0x05,0x2A,0x2D,0x3C
};

HUFFMAN messageArmor[] = //4 bytes
{
	0x05,0xC4,0xD2,0xD0
};

HUFFMAN messageBoots[] = //4 bytes
{
	0x05,0xA7,0x77,0xC4
};

HUFFMAN messageCharm[] = //4 bytes
{
	0x05,0x06,0xF1,0x34
};

HUFFMAN messageImmunity[] = //7 bytes
{
	0x0B,0x88,0xC8,0xE5,0xD8,0x20,0x60
};

HUFFMAN messageMissingKey[] = //13 bytes
{
	0x15,0xFA,0xC3,0x01,0x82,0x37,0xD2,0xBC,0x38,0xC6,0x3C,0x9F,0x00
};

HUFFMAN messageCastle1[] = //22 bytes
{
	0x27,0x78,0x0D,0xC3,0x0E,0x35,0xCD,0xDA,0xBC,0x53,0xB6,0xD6,0x63,0xFA,0x75,0xCE,
	0xDB,0x3A,0x4E,0xBA,0x1A,0x54
};

HUFFMAN messageCastle2[] = //24 bytes
{
	0x2B,0xDB,0x47,0x0E,0x53,0xB6,0xE7,0x5D,0x0D,0x21,0x8F,0xEA,0x97,0x4D,0xD1,0x88,
	0xE5,0xEB,0x08,0xC6,0xA7,0xD6,0x25,0x50
};

HUFFMAN messageCastle3[] = //22 bytes
{
	0x27,0xDB,0x47,0x0E,0x53,0xB6,0xE7,0x5D,0x0D,0x21,0x8F,0xEA,0x97,0x4D,0xD1,0x88,
	0xE5,0xEB,0x09,0x47,0xD1,0xD4
};

HUFFMAN messageCastle4[] = //24 bytes
{
	0x29,0xDB,0x47,0x0E,0x53,0xB6,0xE7,0x5D,0x0D,0x21,0x8F,0xEA,0x97,0x4D,0xD1,0x88,
	0xE5,0xEB,0x28,0x3F,0xE6,0xC4,0xF1,0x54
};

HUFFMAN messageCastle5[] = //23 bytes
{
	0x28,0xDB,0x47,0x0E,0x53,0xB6,0xE7,0x5D,0x0D,0x21,0x8F,0xEA,0x97,0x4D,0xD1,0x88,
	0xE5,0xEB,0x2B,0xB5,0x3D,0x0A,0xA0
};

HUFFMAN messageBookshelf1[] = //23 bytes
{
	0x28,0xED,0xB8,0x63,0xFA,0x75,0xC3,0x4E,0x0E,0xB4,0xFA,0x1C,0x97,0xD7,0x35,0xB0,
	0x04,0xA7,0xD6,0x14,0x26,0xAD,0x6A
};

HUFFMAN messageBookshelf2[] = //23 bytes
{
	0x29,0xA3,0x79,0xD0,0xE5,0x0D,0x38,0x3A,0xD3,0xE9,0x4C,0x3C,0xB2,0xBD,0x1D,0x8B,
	0x8D,0x44,0xCA,0x79,0xEA,0xF3,0xAA
};

HUFFMAN messageBookshelf3[] = //24 bytes
{
	0x2B,0xED,0xB4,0x70,0x18,0x23,0x7D,0x29,0xB8,0xA3,0xD7,0xBE,0x5D,0x07,0xED,0xD8,
	0x7A,0x76,0xDC,0xF6,0x21,0x82,0xC8,0xAA
};

HUFFMAN messageBookshelf4[] = //24 bytes
{
	0x29,0xB1,0x57,0xD0,0xE3,0x3D,0x88,0x60,0xB2,0x29,0xEB,0x64,0xB5,0x1E,0xBD,0xF4,
	0xE4,0x0A,0xBE,0x9D,0xB4,0x39,0xAE,0xA0
};

HUFFMAN messageBookshelf5[] = //18 bytes
{
	0x1D,0xDB,0x52,0xAE,0x7B,0x10,0xC1,0x64,0x53,0x4F,0xA5,0xAB,0xCB,0xD5,0x0E,0xC7,
	0xD5,0x00
};

HUFFMAN messageConfirmUseItem[] = //3 bytes
{
	0x04,0x09,0x38
};

HUFFMAN wordExp[] = //4 bytes
{
	0x04,0x74,0x9F,0xF0
};

HUFFMAN wordLevelUp[] = //6 bytes
{
	0x08,0x53,0x35,0xAA,0x07,0xF8
};

HUFFMAN wordAttacks[] = //6 bytes
{
	0x08,0xCE,0xEC,0x01,0x84,0xB0
};

HUFFMAN wordUses[] = //4 bytes
{
	0x05,0x09,0x32,0x58
};

HUFFMAN wordCasts[] = //4 bytes
{
	0x06,0x06,0x17,0x14
};

HUFFMAN wordFor[] = //4 bytes
{
	0x04,0x9A,0xDA,0x00
};

HUFFMAN wordDmg[] = //4 bytes
{
	0x04,0x9E,0xD2,0xB0
};

HUFFMAN wordYesNo[] = //4 bytes
{
	0x06,0xF9,0x94,0x1B
};

HUFFMAN wordLevel[] = //5 bytes
{
	0x06,0x53,0x35,0xAA,0x00
};

HUFFMAN wordName[] = //7 bytes
{
	0x0C,0x63,0xCD,0x26,0x41,0xCD,0x18
};

HUFFMAN wordShopBuy[] = //4 bytes
{
	0x04,0xA6,0x1F,0xA0
};

#endif //HUFFMAN_H
